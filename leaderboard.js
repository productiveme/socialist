// Generated by CoffeeScript 1.3.3
(function() {
  var Players, reset_data;

  Players = new Meteor.Collection('players');

  reset_data = function() {
    var name, names, _i, _len, _results;
    Players.remove({});
    names = ['Ada Lovelace', 'Grace Hopper', 'Marie Curie', 'Carl Friedrich Gauss', 'Nikola Tesla', 'Claude Shannon', 'Issac Newton'];
    _results = [];
    for (_i = 0, _len = names.length; _i < _len; _i++) {
      name = names[_i];
      _results.push(Players.insert({
        name: name,
        score: Math.floor(Math.random() * 10) * 5
      }));
    }
    return _results;
  };

  if (Meteor.is_client) {
    _.extend(Template.navbar, {
      events: {
        'click .sort_by_name': function() {
          return Session.set('sort_by_name', true);
        },
        'click .sort_by_score': function() {
          return Session.set('sort_by_name', false);
        },
        'click .reset_data': function() {
          return reset_data();
        }
      }
    });
    _.extend(Template.leaderboard, {
      players: function() {
        var sort;
        sort = Session.get('sort_by_name') ? {
          name: 1
        } : {
          score: -1
        };
        return Players.find({}, {
          sort: sort
        });
      },
      events: {
        'click #add_button, keyup #player_name': function(evt) {
          var input;
          if (evt.type === 'keyup' && evt.which !== 13) {
            return;
          }
          input = $('#player_name');
          if (input.val()) {
            Players.insert({
              name: input.val(),
              score: Math.floor(Math.random() * 10) * 5
            });
            return input.val('');
          }
        }
      }
    });
    _.extend(Template.player, {
      events: {
        'click .increment': function() {
          return Players.update(this._id, {
            $inc: {
              score: 5
            }
          });
        },
        'click .remove': function() {
          return Players.remove(this._id);
        },
        'click': function() {
          return $('.tooltip').remove();
        }
      },
      enable_tooltips: function() {
        _.defer(function() {
          return $('[rel=tooltip]').tooltip();
        });
        return '';
      }
    });
  }

  if (Meteor.is_server) {
    Meteor.startup(function() {
      if (Players.find().count() === 0) {
        return reset_data();
      }
    });
  }

}).call(this);
