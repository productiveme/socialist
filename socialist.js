// Generated by CoffeeScript 1.3.3
(function() {
  var Items, reset_data;

  Items = new Meteor.Collection('items');

  reset_data = function() {
    var curItem;
    Items.remove({});
    curItem = Items.insert({
      item: 'First Item',
      indent: 0,
      isEditing: false
    });
    curItem = Items.insert({
      item: 'Second Item',
      indent: 0,
      isEditing: false
    });
  };

  if (Meteor.is_client) {
    _.extend(Template.socialist, {
      items: function() {
        return Items.find({});
      }
    });
    _.extend(Template.navbar, {
      events: {
        'click .reset_data': function() {
          return reset_data();
        }
      }
    });
    _.extend(Template.item, {
      events: {
        'click .remove': function() {
          return Items.remove(this._id);
        },
        'click .itemView': function() {
          return Items.update(this._id, {
            isEditing: true,
            item: this.item,
            indent: this.indent
          });
        },
        'click .outdent': function() {
          return Items.update(this._id, {
            $inc: {
              indent: -1
            }
          });
        },
        'click .indent': function() {
          return Items.update(this._id, {
            $inc: {
              indent: 1
            }
          });
        },
        'click .done, keyup .itemEditingInput': function(evt) {
          if (evt.type === 'keyup' && evt.which !== 13) {
            return;
          }
          return Items.update(this._id, {
            isEditing: false,
            item: $('.item_' + this._id).val(),
            indent: this.indent
          });
        }
      }
    });
  }

  if (Meteor.is_server) {
    Meteor.startup(function() {
      if (Items.find().count() === 0) {
        return reset_data();
      }
    });
  }

}).call(this);
